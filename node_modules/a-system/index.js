/**
 * Парсинг заказа из ASystem в текстовом формате
 * 
 * @param {string} text
 * @return {object}
 */
exports.parseOrder = function(text) {
  /**
   * @todo i18n
   */
  var ERR_PARSE = 'ОШИБКА ПАРСИНГА';
  
  /**
   * В бой вступают регулярки
   * 
   * Интерфейс объектов парсера:
   * 
   * @param {string} field Имя поля в результирующем объекте;
   * @param {RegExp} matcher Регулярка, определяющая значение;
   * @param {number} [index] Индекс значения в массиве совпадений, опционально;
   * @param {function} [postProcess] Пост-обработка значения, опционально;
   */
  var parser = [
      {field: 'order_number', matcher: /Заказ №	([^\t]*)/},
      {field: 'customer', matcher: /Заказчик: ([^\t|\r]*)/},
      {
        field: 'order_name',
        matcher: /\/ ([^\t|\r]*)/,
        postProcess: function(m) {
          // С выходным значением ничего не делаем...
          return m;
          // ...хотя можно что угодно, например:
          //return m.split(', ');
          //return m.toUpperCase();
          //return m.replace(/ /g,'_');
        }
      }, // Наименование заказа
      {field: 'manager', matcher: /Менеджер: ([^\t|\s]*)/},
      {field: 'master', matcher: /Технолог: (.*)/},
      {field: 'designer', matcher: /КАРТА (.*)/}, // Дизайнер
      {field: 'profile', matcher: /профиль\t(.*)/}, // ICC-профиль
      {field: 'cut', matcher: /Высечка ([^\s]*)/},
  ];
  
  var result = {};
  
  parser.forEach(function(p) {
      var m = p.matcher.exec(text);
      
      // Индекс совпадения, по умолчанию 1
      var r = (typeof(p.index) === 'undefined') ? 1 : p.index;
      
      // Пост-обработка, если требуется
      // С отловом ошибок парсинга
      var value;
      try {
        value = m[r];
        if (typeof(p.postProcess) === 'function') {
          value = p.postProcess(m[r]);
        }
      } catch (e) {
        value = ERR_PARSE;
      }
      
      result[p.field] = value;
  });
  
  return result;
};